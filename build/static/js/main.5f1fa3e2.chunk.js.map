{"version":3,"sources":["components/NavBar.js","components/Footer.js","components/stylingComponents/Spinner.js","components/routes/home/Home.js","components/stylingComponents/Or.js","components/routes/cart/Cart.js","components/routes/product/Product.js","components/routes/customerInfo/CustomerInfoForm.js","components/paypal/PaypalButton.js","components/routes/payment/Payment.js","components/routes/paymentConfirmation/PaymentConfirmation.js","redux-functions/cart/cartReturner.js","redux-functions/cart/cartChangeItemQuantity.js","redux-functions/cart/removeFromCart.js","redux-functions/product-filter/removeFilterParam.js","redux-functions/product-filter/modifyAppliedFilters.js","redux-functions/product-sort/sortByPrice.js","redux-functions/product-sort/modifySortByPriceObj.js","App.js","index.js"],"names":["connect","state","cart","props","cartCount","reduce","accumulator","currentValue","quantity","react_default","a","createElement","id","Link","to","Image","src","className","alt","Badge","Footer","Grid","Row","Col","sm","md","react_social_icons","url","Spinner","style","textAlign","react_loader_spinner_default","type","color","height","width","loadingMessage","FilterOption","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checked","handleChange","bind","assertThisInitialized","filterAction","filterType","param","isSelected","productFilterModifier","option","dispatch","setState","Checkbox","onChange","Component","FilterOptions","notUnique","data","map","obj","push","uniqueOptionsObj","Set","options","toConsumableArray","Home_FilterOption","key","title","Filter","_this2","lowHighChecked","highLowChecked","filterOptions","filterExp","sortPriceLowHigh","sortPriceHighLow","initFilterExp","toggleFilterExp","window","innerWidth","_this3","addEventListener","item","prevProps","_this4","order","selected","xl","Panel","expanded","bsStyle","onToggle","Heading","Title","componentClass","toggle","Body","collapsible","Product","_this5","maxQuantiy","increment","decrement","addToCart","e","preventDefault","availableQuantity","maxQuantity","cartAction","lg","Thumbnail","images","href","manufacturer","collection","sizeCategory","price","madeOf","sizeTrue","trueConstruction","Label","onClick","Button","Products","_this6","loadMoreProducts","_this7","productCards","objArray","seen","filter","hasOwnProperty","filterForUniqueObjs","filteredData","slice","visibleProducts","Home_Product","bsSize","Home","_this8","dataForFilter","loading","_this9","fetch","then","res","json","resArr","catch","err","console","log","stylingComponents_Spinner","Fragment","Helmet","fluid","Home_Filter","Home_Products","Or","CartItem","removeFromCart","itemKey","cartItem","description","Cart","cartTotal","current","cartItems","Cart_CartItem","length","concat","toString","toFixed","stylingComponents_Or","Jumbotron","React","_this$props","image_gallery_default","showPlayButton","showFullscreenButton","items","ProductPage","_this$props2","match","product","find","params","original","thumbnail","Product_Product","Checkout","formIsInvalid","formData","customerInfo","formFieldValidity","firstNameValid","lastNameValid","emailValid","phoneNumberValid","streetValid","cityValid","stateValid","zipCodeValid","goToPay","inputToState","submitForm","field","name","target","input","value","objectSpread","defineProperty","keys","validationBools","reducer","acc","currVal","forEach","validateEmail","email","test","invalidMessage","_this$state$formData","firstName","lastName","phoneNumber","street","city","zipCode","_this$state$formField","stateOptions","Redirect","onSubmit","placeholder","PaypalButton","showButton","ReactDOM","isScriptLoaded","isScriptLoadSucceed","paypal","PAYPAL","_this$props3","total","currency","env","commit","client","onSuccess","onError","onCancel","shipping","react","payment","rest","create","transactions","amount","input_fields","no_shipping","onAuthorize","actions","execute","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","size","shape","label","tagline","scriptLoader","xs","Payment","paymentSuccessful","Payment_CartItem","paypal_PaypalButton","sandbox","production","paymentData","payPalRes","purchaseCart","PaymentConfirmation","confirmationNumber","orderData","orderItems","UPC","paypalInfo","orderObj","method","headers","Content-Type","body","JSON","stringify","resObj","cartReturner","action","array","index","matchingKey","findIndex","newCartArray","cartChangeItemQuantity","splice","removeFilterParam","filters","sortByPrice","compare","trueFalse","i","includes","filtersArray","entries","types","paramsCreator","values","unshift","trueFalseList","insertIfInFor","lowToHigh","highToLow","sort","b","modifyAppliedFilters","appliedFilters","indexOfFilter","modifyPriceSort","sortObj","persistedCart","serializedCart","localStorage","getItem","parse","loadCartFromLocalStorage","serializedCustomerInfo","loadCustomerInfoFromLocalStorage","initialState","productsPerLoad","products","loadProductsFromLocalStorage","loadOrderDataFromLocalStorage","store","createStore","arguments","undefined","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","saveCartToLocalStorage","getState","saveCustomerInfoToLocalStorage","saveProductsToLocalStorage","persistOrderDataToLocalStorage","App","es","BrowserRouter","components_NavBar","Route","exact","path","render","routes_home_Home","assign","loadMoreQuantity","component","CustomerInfoForm","src_components_Footer","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f1fa3e2.chunk.js","sourcesContent":["import React from 'react';\nimport { Badge,Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './NavBar.css';\n\n\n\nfunction NavBar(props){\n    const cartCount = props.cart.reduce((accumulator, currentValue) => accumulator + currentValue.quantity, 0);\n    return(\n        <div id=\"navBar\">\n            <Link to=\"/\">\n                <Image src=\"/logo.png\" className=\"fluid\" />\n            </Link>\n            <Link to=\"/cart\" id=\"cart-cluster\">\n                <Image src=\"/cart.png\" alt=\"cart\" id=\"cartimg\" />\n                <Badge>{cartCount}</Badge>\n            </Link>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cart\n})\n\n\n\nexport default connect(mapStateToProps)(NavBar);\n\n","import React from 'react';\nimport {Grid,Row,Col} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport {SocialIcon} from 'react-social-icons';\n\nimport './Footer.css';\n\nconst Footer = () => {\n    return(\n        <Grid id=\"footer-body\">\n            <Row>\n                <Col sm={1} md={3}></Col>\n                <Col sm={3} md={2} className=\"footer-col\">\n                    <h4>Contact Us</h4>\n                    <p>account@ourDomain.com</p>\n                    <p>(205)-123-4567</p>\n                    <p>111 Maple St<br /> Atlantis, UnderDaSea <br /> 12345</p>\n                </Col>\n                <Col sm={4} md={2} className=\"footer-col\">\n                    <h4>Connect With Us</h4>\n                    <SocialIcon url=\"http://www.facebook.com\" className=\"social-icon\"/>\n                    <SocialIcon url=\"http://www.instagram.com\" className=\"social-icon\"/>\n                </Col>                                \n                <Col sm={3} md={2} className=\"footer-col\">\n                    <h4>About Us</h4>\n                    <Link to=\"/\" className=\"footer-link\">\n                        <p>Our History</p>\n                    </Link>\n                    <Link to=\"/\" className=\"footer-link\">\n                        <p>Retail Locations</p>\n                    </Link>\n                    <Link to=\"/\" className=\"footer-link\">\n                        <p>Pricing Structure</p>\n                    </Link>\n                    <Link to=\"/\" className=\"footer-link\">\n                        <p>Wholesale Options</p>\n                    </Link>\n                </Col>\n                <Col sm={1} md={3}></Col>\n            </Row>\n        </Grid>\n    )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\n\nconst Spinner = (props) => {\n    return(\n        <div style={{textAlign: 'center'}} >\n            <Loader type=\"Circles\" color='#337ab7' height={100} width={100} />\n            <h1>{props.loadingMessage}</h1>\n        </div>\n    )\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { Grid,Row,Col,Thumbnail,Button,Badge,Label,Panel,Checkbox } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Spinner from '../../stylingComponents/Spinner';\nimport './Home.css';\nimport { Helmet } from 'react-helmet';\n\nclass FilterOption extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            checked: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(){\n        const filterType = this.props.filterType;\n        const filterSelection = this.props.option;\n        const isSelected = !this.state.checked;\n        const productFilterModifier = (filterType, param, isSelected)=> {\n            if(isSelected){\n                return {\n                    type: \"EDITFILTERPARAMS\",\n                    filterType: filterType,\n                    param: param,\n                    isSelected: isSelected\n                }\n            } else {\n                return {\n                    type: \"EDITFILTERPARAMS\",\n                    filterType: filterType,\n                    param: param,\n                    isSelected: isSelected\n                }\n            }\n            \n        };\n\n        const filterAction = productFilterModifier(filterType, filterSelection, isSelected);\n        this.props.dispatch(filterAction);\n\n        this.setState(state =>({\n            checked: !state.checked\n        }));\n    }\n\n    render() {\n        return(\n            <Checkbox checked={this.state.checked} onChange={this.handleChange}>{this.props.option}</Checkbox>\n        )\n    }\n}\n\nfunction FilterOptions(props){ \n    let type = props.filterType; \n    let notUnique = [];\n    props.data.map( obj => \n        notUnique.push(obj[type])    \n    )\n    const uniqueOptionsObj = new Set(notUnique);\n    const uniqueOptionsArray = [...uniqueOptionsObj]\n    const options = uniqueOptionsArray.map(option =>\n        <FilterOption option={option} dispatch={props.dispatch} filterType={type} key={option} />   \n    )\n    return(\n        <div className=\"filter-group\">\n            <h4 className=\"filter-group-title\">{props.title}</h4>\n            {options}\n        </div>\n    )  \n}\n\nclass Filter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lowHighChecked: false,\n            highLowChecked: false,\n            filterOptions: [],\n            filterExp: true\n        }\n\n        this.sortPriceLowHigh = this.sortPriceLowHigh.bind(this);\n        this.sortPriceHighLow = this.sortPriceHighLow.bind(this);\n        this.initFilterExp = this.initFilterExp.bind(this);\n        this.toggleFilterExp = this.toggleFilterExp.bind(this);\n    }\n\n    toggleFilterExp(){\n        this.setState(state => ({filterExp: !state.filterExp}))\n    }\n\n    initFilterExp(){\n        this.setState({filterExp: window.innerWidth > 767})\n    }\n\n    componentDidMount(){\n        this.initFilterExp();\n        window.addEventListener(\"resize\", this.initFilterExp);\n        const filterOptionsArray = [\n            {\n                title: 'Size',\n                filterType: 'sizeCategory'\n            },\n            {\n                title: 'Material',\n                filterType: 'material'\n            },\n            {\n                title: 'Thickness',\n                filterType: 'pileThickness'\n            },\n            {\n                title: 'Construction',\n                filterType: 'construction'\n            }\n        ];\n        const filterOptions = filterOptionsArray.map(item => <FilterOptions title={item.title} filterType={item.filterType} data={this.props.data} dispatch={this.props.dispatch} key={item.filterType} />);\n        this.setState({filterOptions: filterOptions});\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.data !== this.props.data){\n            const filterOptionsArray = [\n                {\n                    title: 'Size',\n                    filterType: 'sizeCategory'\n                },\n                {\n                    title: 'Material',\n                    filterType: 'material'\n                },\n                {\n                    title: 'Thickness',\n                    filterType: 'pileThickness'\n                },\n                {\n                    title: 'Construction',\n                    filterType: 'construction'\n                }\n            ];\n            const filterOptions = filterOptionsArray.map(item => <FilterOptions title={item.title} filterType={item.filterType} data={this.props.data} dispatch={this.props.dispatch} />);\n            this.setState({filterOptions: filterOptions});\n        }\n    }\n\n    sortPriceLowHigh(){\n        if(!this.state.lowHighChecked){\n            this.setState({\n                lowHighChecked: true,\n                highLowChecked: false\n            })\n            const sortAction = {\n                type: \"SORTBYPRICE\",\n                order: 'lowToHigh',\n                selected: true\n            }\n            this.props.dispatch(sortAction);\n        } else if(this.state.lowHighChecked){\n            this.setState({\n                lowHighChecked: false,\n                highLowChecked: false\n            })\n            const sortAction = {\n                type: \"SORTBYPRICE\",\n                order: 'lowToHigh',\n                selected: false\n            }\n            this.props.dispatch(sortAction);\n        }\n    }\n\n    sortPriceHighLow(){\n        \n        if(!this.state.highLowChecked){\n            this.setState({\n                lowHighChecked: false,\n                highLowChecked: true\n            })\n            const sortAction = {\n                type: \"SORTBYPRICE\",\n                order: 'highToLow',\n                selected: true\n            }\n            this.props.dispatch(sortAction);\n        } else if(this.state.highLowChecked){\n            this.setState({\n                lowHighChecked: false,\n                highLowChecked: false\n            })\n            const sortAction = {\n                type: \"SORTBYPRICE\",\n                order: 'highToLow',\n                selected: false\n            }\n            this.props.dispatch(sortAction);\n        }\n    }\n\n    render() {\n        return(\n            <Col sm={3} md={2} xl={1} id=\"filter\">\n                <Panel expanded={this.state.filterExp} bsStyle=\"primary\" onToggle={this.toggleFilterExp}>\n                    <Panel.Heading>\n                    <Panel.Title componentClass=\"h3\" toggle id=\"filter-title\"> {!this.state.filterExp? \"Expand \": \"Minimize \"}Filter & Sort</Panel.Title>\n                    \n                    </Panel.Heading>\n                    <Panel.Body collapsible>\n                        <div className=\"filter-group\">\n                            {this.state.filterOptions}\n                        </div>\n                        <div>\n                            <h4>Sort By</h4>\n                            <Checkbox checked={this.state.lowHighChecked} onChange={this.sortPriceLowHigh}>Price: Low to High</Checkbox>\n                            <Checkbox checked={this.state.highLowChecked} onChange={this.sortPriceHighLow}>Price: High to Low</Checkbox>\n                        </div>\n                    </Panel.Body>\n                </Panel>\n            </Col>\n        )\n    }\n}\n\n\nclass Product extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            quantity: 1,\n            maxQuantiy: false\n        }\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.addToCart = this.addToCart.bind(this);\n    }\n    \n    increment(e){\n        e.preventDefault();\n        if(this.props.obj.availableQuantity > this.state.quantity && this.props.obj.availableQuantity - 1 === this.state.quantity ){\n            this.setState({\n                quantity: this.state.quantity + 1,\n                maxQuantiy: true\n            });\n        } else if(this.props.obj.availableQuantity > this.state.quantity){\n            this.setState({quantity: this.state.quantity + 1});\n        }\n        \n    }\n\n    decrement(e){\n        e.preventDefault();\n        if(this.state.quantity > 1 && this.props.obj.availableQuantity === this.state.quantity){\n            this.setState({\n                quantity: this.state.quantity - 1,\n                maxQuantity: false\n            });\n        } else if(this.state.quantity > 1){\n            this.setState({quantity: this.state.quantity - 1});\n        }\n    }\n\n    addToCart(e){\n        e.preventDefault();\n        const cartActionCreator = (quantity, item, maxQuantity) => {\n            return {\n                type: \"ADD_TO_CART\",\n                quantity: quantity,\n                item: item,\n                maxQuantity: maxQuantity\n            }\n        }\n        const cartAction = cartActionCreator(this.state.quantity, this.props.obj, this.state.maxQuantiy);\n        this.props.dispatch(cartAction);\n    }\n\n    render() { \n        const obj = this.props.obj;\n        return (\n           <Col sm={6} md={4} lg={3}>\n                <Thumbnail src={obj.images[0]} href={'/product/'+obj.key}>\n                    <div>\n                        <h4>{obj.manufacturer} {obj.collection} {obj.sizeCategory}</h4>\n                        <h3><sup>$</sup>{obj.price}<sup>95</sup></h3>\n                        <ul>\n                            <li>{obj.madeOf}</li>\n                            <li>{obj.sizeTrue}</li>\n                            <li>{obj.trueConstruction}</li>\n                        </ul>\n                        <div>\n                            <div id=\"increment-button-group\">\n                                <Label bsStyle=\"success\" className=\"cart-quantity-button add\" onClick={this.increment}>+</Label>  \n                                <Badge>{this.state.quantity}</Badge>  \n                                <Label bsStyle=\"danger\" className=\"cart-quantity-button remove\" onClick={this.decrement}>-</Label>\n                            </div>\n                            <Button bsStyle=\"primary\" className=\"remove-all-button\" onClick={this.addToCart}>Add to Cart</Button>\n                        </div>\n                        {this.state.maxQuantiy ? <p className=\"max-quantity-indicator\">* Max Available Quantity</p> : null}\n                    </div>\n                </Thumbnail>\n            </Col> \n        );\n    }\n}\n \nclass Products extends Component {\n    constructor(props) {\n        super(props);\n        this.loadMoreProducts = this.loadMoreProducts.bind(this);\n    }\n\n    loadMoreProducts(){\n        const viewMore = {\n            type: \"VIEWMORE\"\n        }\n        this.props.dispatch(viewMore);\n    }\n\n    render() {\n        const filterForUniqueObjs = objArray => {\n            let seen = {};\n            return objArray.filter(obj => seen.hasOwnProperty(obj.key) ? false : seen[obj.key] = true)\n        }\n        \n        let productCards = filterForUniqueObjs(this.props.filteredData).slice(0, this.props.visibleProducts).map(obj => \n            <Product obj={obj} dispatch={this.props.dispatch} key={obj.key} />\n        )\n\n        return(\n            <Col sm={9} md={10} xl={11}>\n                <Row>\n                    {productCards}\n                </Row>\n                <div id=\"load-more\">\n                    <Button bsStyle=\"primary\" bsSize=\"large\" id=\"load-more-button\" onClick={this.loadMoreProducts}>Load More</Button>\n                </div>\n            </Col>\n        )\n    }\n}\n\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataForFilter: [],\n            loading: true            \n        }\n    }\n\n    componentDidMount(){\n        fetch('http://18.188.129.119:8000/rugs')\n        .then(res => {\n            return res.json()\n        })\n        .then(resArr => {\n            this.props.dispatch({type:'LOADDATA', data: resArr});\n            this.setState({dataForFilter: resArr, loading: false});\n        })\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        const {\n            props,\n        } = this;\n\n        if(this.state.loading){\n            return(\n                <Spinner loadingMessage='Loading...' />\n            )\n        }\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>RUGZILLA</title>\n                </Helmet>\n                <Grid fluid>\n                    <Row>\n                        <Filter data={this.state.dataForFilter} dispatch={props.dispatch}/>\n                        <Products filteredData={props.filteredData} visibleProducts={props.visibleProducts} dispatch={props.dispatch}/>\n                    </Row>\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    filteredData: state.filteredData,\n    data: state.data,\n    visibleProducts: state.visibleProducts\n});\n\nexport default connect(mapStateToProps)(Home);\n\n\n","import React from 'react';\n\nimport './Or.css';\n\nfunction Or(){\n    return (\n        <div id=\"or\">OR</div>\n    )\n}\n\nexport default Or;","import React, { Component } from 'react';\nimport { Image,Grid,Row,Col,Badge,Label,Button,Jumbotron } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\n\nimport Or from '../../stylingComponents/Or';\nimport './Cart.css';\n\n\n\nclass CartItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.removeFromCart = this.removeFromCart.bind(this);\n    }\n\n    increment(){\n        const cartItemIncrementer = (quantity, itemKey)=> ({\n            type: \"INCREMENT\",\n            quantity: quantity + 1,\n            itemKey: itemKey\n        })\n\n        const cartAction = cartItemIncrementer(this.props.cartItem.quantity, this.props.cartItem.item.key);\n        this.props.dispatch(cartAction);\n    };\n\n    decrement(){\n        if(this.props.cartItem.quantity >= 1){\n            const cartItemDecrementer = (quantity, itemKey)=> ({\n                type: \"DECREMENT\",\n                quantity: quantity - 1,\n                itemKey: itemKey\n            })\n            \n            const cartAction = cartItemDecrementer(this.props.cartItem.quantity, this.props.cartItem.item.key);\n            this.props.dispatch(cartAction);\n        }\n        \n    };\n\n    removeFromCart(){\n        const cartItemRemove = itemKey => ({\n            type: \"REMOVEFROMCART\",\n            itemKey: itemKey\n        })\n\n        const cartAction = cartItemRemove(this.props.cartItem.item.key);\n        this.props.dispatch(cartAction);\n    };\n\n    render() { \n        const item = this.props.cartItem.item;\n        return (\n            <Row className=\"cartitem\">\n                <Col sm={6} className=\"cart-image-col\">\n                    <Image src={item.images[0]} alt=\"Product\" className=\"cart-image\" />\n                </Col>\n                <Col sm={6} className=\"cart-item-text\">\n                    <h3>{item.manufacturer} {item.collection} {item.sizeCategory}</h3>\n                    <h2><sup>$</sup>{item.price}<sup>95</sup></h2>\n                    <div>\n                        <Label bsStyle=\"success\" className=\"cart-quantity-button add\" onClick={this.increment}>+</Label>  \n                        <Badge>{this.props.cartItem.quantity}</Badge>  \n                        <Label bsStyle=\"danger\" className=\"cart-quantity-button remove\" onClick={this.decrement}>-</Label>\n                        <Button bsStyle=\"danger\" className=\"remove-all-button\" onClick={this.removeFromCart}>Remove</Button>\n                    </div>\n                    {this.props.cartItem.maxQuantity ? <p className=\"max-quantity-indicator\">* Max Available Quantity</p> : null}\n                    <p className=\"cart-item-description\">{item.description}</p>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nclass Cart extends React.Component {\n  \n    render() {\n        const {\n            props,\n        } = this;\n\n        const cartCount = props.cart.reduce((accumulator, currentValue) => accumulator + currentValue.quantity, 0)\n        const reducer = (accumulator, current) => accumulator + (current.item.price * current.quantity);\n        const cartDollarTotal = props.cart.reduce(reducer, 0);\n        const cartTotal = cartDollarTotal + (cartCount*95/100);\n        const cartItems = props.cart.map( cartItem =>\n            <CartItem cartItem={cartItem} dispatch={props.dispatch} key={cartItem.key} />\n        )\n        \n        if(cartItems.length > 0){\n            return(\n                <React.Fragment>\n                    <Helmet>\n                        <title>Your Cart ({cartCount === 1 ? `${cartCount.toString()} item`: `${cartCount.toString()} items`})</title>\n                    </Helmet> \n                    <Grid id=\"cart\">\n                        <Row>\n                            <Col sm={6} id=\"cart-title\">\n                                <h1>Your Cart({cartCount} Items)</h1>\n                            </Col>\n                            <Col sm={6} id=\"total-summary\">\n                                <h3>Total: <sup>$</sup>{cartTotal.toFixed(2)}</h3>\n                                <Link to=\"/customerInfoForm\">\n                                    <Button bsStyle=\"primary\" style={{\n                                        width: \"65%\",\n                                        height: \"45px\"\n                                    }}>Checkout</Button>\n                                </Link>\n                                <Or />\n                                <Link to=\"/\">\n                                    <Button bsStyle=\"primary\" style={{\n                                        width: \"65%\",\n                                        height: \"45px\"\n                                    }}>Return to Items</Button>\n                                </Link>\n                                </Col>\n                        </Row>\n                        {cartItems}\n                    </Grid>\n                </React.Fragment>\n            );\n        }\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>Fill Up That Cart!</title>\n                </Helmet>\n                <Jumbotron id=\"empty-cart-jumbotron\">\n                    <h1>There's nothing in your cart. How disappointing!</h1>\n                    <h3>Lets see if we can change that!</h3>\n                    <Link to=\"/\" >\n                        <Button bsStyle=\"primary\" bsSize=\"large\">Return to Products!</Button>\n                    </Link>\n                </Jumbotron>\n            </React.Fragment>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\n\nexport default connect(mapStateToProps)(Cart);","import React, { Component } from 'react';\nimport { Grid,Row,Col,Badge,Label,Button } from 'react-bootstrap';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\n\nimport './Product.css';\n\n\n\n\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quantity: 1,\n            maxQuantity: false\n        }\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.addToCart = this.addToCart.bind(this);\n    }\n\n    increment(){\n        if(this.state.quantity < this.props.item.availableQuantity){\n            this.setState(state => ({\n                quantity: state.quantity + 1\n            }))\n        } else {\n            this.setState({maxQuantity: true})\n        }\n        \n    }\n\n    decrement(){\n        if(this.state.quantity > 1 && this.state.maxQuantity){\n            this.setState( state => ({\n                quantity: state.quantity - 1,\n                maxQuantity: false\n            }));\n        } else if(this.state.quantity > 1){\n            this.setState(state => ({\n                quantity: state.quantity -1\n            }))\n        } else {\n            return;\n        }\n        \n    }\n\n    addToCart(){\n        function cartActionCreator(quantity, item, maxQuantity){\n            return {\n                type: \"ADD_TO_CART\",\n                quantity: quantity,\n                item: item,\n                maxQuantity: maxQuantity\n            }\n        }\n        const cartAction = cartActionCreator(this.state.quantity, this.props.item, this.state.maxQuantity);\n        this.props.dispatch(cartAction);\n    }\n\n    render() {\n        const {images, item} = this.props;\n        const {manufacturer, collection, sizeCategory, description} = item;\n        return(\n            <Row>\n                <Col sm={6}>\n                    <ImageGallery showPlayButton={false} showFullscreenButton={false} items={images}/>\n                </Col>\n                <Col sm={6}>\n                    <h1>{manufacturer} {collection} {sizeCategory}</h1> \n                    <div><Label bsStyle=\"success\" className=\"cart-quantity-button add\" onClick={this.increment} >+</Label> <Badge>{this.state.quantity}</Badge> <Label bsStyle=\"danger\" className=\"cart-quantity-button remove\" onClick={this.decrement}>-</Label> <Button bsStyle=\"primary\" onClick={this.addToCart} >Add to Cart</Button></div>\n                    {this.state.maxQuantity ? <p className=\"max-quantity-indicator\">* Max Available Quantity</p> : null}\n                    <p className=\"cart-item-description\">{description}</p>\n                </Col>\n            </Row>\n        )\n    }\n}\n\n\n\nclass ProductPage extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            item: {},\n            images: []\n        }\n    }\n\n    componentDidMount(){\n        const {data, match} = this.props;\n        const product = data.find(item => item.key === match.params.key);\n        const images = product.images.map(item => ({\n            original: item,\n            thumbnail: item\n        }));\n        this.setState({\n            item: product,\n            images: images\n        });\n    }\n\n\n    render(){\n        const { item } = this.state;\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>{item.manufacturer + ' ' + item.collection}</title>\n                </Helmet>\n                <Grid>\n                    <Product item={item} images={this.state.images} dispatch={this.props.dispatch} />\n                    {/* RELATED PRODUCTS\n                    <Row>\n                        <h1 id=\"related-products-label\">Related Products</h1>\n                        <Col sm={6}  md={3}>\n                            <Thumbnail src=\"https://placeimg.com/1000/480/any\" alt=\"242x200\">\n                                <h3>Thumbnail label</h3>\n                                <p>Description</p>\n                                <p>\n                                <Button bsStyle=\"primary\">Button</Button>\n                                </p>\n                            </Thumbnail>\n                        </Col>\n                    </Row> */}\n                </Grid>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.data,\n    cart: state.cart\n});\n\n\nexport default connect(mapStateToProps)(ProductPage);","import React, { Component } from 'react';\nimport {Button} from 'react-bootstrap';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\n\nimport './CustomerInfoForm.css';\n\nclass Checkout extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            formIsInvalid: false,\n            formData: this.props.customerInfo,\n            formFieldValidity: {\n                firstNameValid: '',\n                lastNameValid: '',\n                emailValid: '',\n                phoneNumberValid: '',\n                streetValid: '',\n                cityValid: '',\n                stateValid: '',\n                zipCodeValid: '' \n            },\n            goToPay: false\n        }\n        this.inputToState = this.inputToState.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n    }\n\n    inputToState(field){\n        const name = field.target.name;\n        const input = field.target.value;\n        if(name === 'state' && input === 'State'){\n            this.setState(state => ({\n                formData: {\n                    ...state.formData,\n                    [name]: ''\n                }\n            }))\n        } else {\n            this.setState(state => ({\n                formData: {\n                    ...state.formData,\n                    [name]: input\n                }\n            }))\n        }\n    }\n\n    submitForm(){\n        const {formData} = this.state;\n        const keys = Object.keys(formData);\n        let validationBools = [];\n        const reducer = (acc, currVal) => acc*currVal;\n        keys.forEach(key => {\n            if(key === 'email'){\n                const validateEmail = (email) => {\n                    var re = /\\S+@\\S+\\.\\S+/;\n                    return re.test(email);\n                }\n                if(validateEmail(formData[key]) === false){\n                    validationBools.push(false);\n                } else if(validateEmail(formData[key]) === true){\n                    validationBools.push(true);\n                }\n            } else {\n                if(formData[key] === ''){\n                    validationBools.push(false);\n                } else if(formData[key] !== ''){\n                    validationBools.push(true);\n                }\n            }\n        })\n        if(validationBools.reduce(reducer) === 1){\n            const customerInfoAction = customerInfoObj => ({\n                type: 'UPDATECUSTOMERINFO',\n                customerInfo: customerInfoObj\n            });\n\n            const customerInfo = customerInfoAction(this.state.formData);\n\n            this.props.dispatch(customerInfo);\n\n            this.setState({goToPay: true});\n        } else if(validationBools.reduce(reducer) === 0){\n            keys.forEach(key => {\n                if(formData[key] === ''){\n                    this.setState(state => ({\n                        formFieldValidity: {\n                        ...state.formFieldValidity,\n                        [`${key}Valid`]: 'invalid'\n                    }\n                }))\n                    console.log('forEach ran with ' + key);\n                }\n                if(formData[key] !== ''){\n                    if(key === 'email'){\n                        const validateEmail = (email) => {\n                            var re = /\\S+@\\S+\\.\\S+/;\n                            return re.test(email);\n                        }\n                        if(validateEmail(formData[key]) === false){\n                            this.setState(state => ({\n                                formFieldValidity: {\n                                    ...state.formFieldValidity,\n                                    [`${key}Valid`]: 'invalid'\n                                }\n                            }))\n                        } else if(validateEmail(formData[key]) === true){\n                            this.setState(state => ({\n                                formFieldValidity: {\n                                    ...state.formFieldValidity,\n                                    [`${key}Valid`]: ''\n                                }\n                            }))\n                        }\n                    } else {\n                        this.setState(state => ({\n                            formFieldValidity: {\n                                ...state.formFieldValidity,\n                                [`${key}Valid`]: ''\n                            }\n                        }))\n                    }\n                }\n            })\n            this.setState({\n                formIsInvalid: true\n            })\n        }\n    }\n\n\n    render(){\n        const {firstName, lastName, email, phoneNumber, street, city, state, zipCode} = this.state.formData;\n        const {firstNameValid, lastNameValid, emailValid, phoneNumberValid, streetValid, cityValid, stateValid, zipCodeValid} = this.state.formFieldValidity;\n        let states = [\n            'Alabama','Alaska','Arizona','Arkansas','California','Colorado','Connecticut','Delaware','District of Columbia','Florida','Georgia','Idaho','Illinois','Indiana','Iowa','Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts','Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska','Nevada','New Hampshire','New Jersey','New Mexico','New York','North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania','Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah','Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'\n        ];\n        const stateOptions = states.map(state => <option value={state}>{state}</option>);\n        let invalidMessage;\n        if(this.state.formIsInvalid){\n            invalidMessage = <h5 style={{color: 'red'}}>One or more fields are invalid!</h5>\n        }\n        if(this.state.goToPay){\n            return <Redirect to=\"/payment\" />\n        }\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>Order Information</title>\n                </Helmet>\n                <form onSubmit={this.submitForm} id=\"form\">\n                    <label className=\"form-input-group\"> <h3>Customer Contact</h3>\n                        <input name=\"firstName\" className={`form-input ${firstNameValid}`} type=\"text\" value={firstName} onChange={this.inputToState} placeholder=\"First Name\" />\n                        <input name=\"lastName\" className={`form-input ${lastNameValid}`} type=\"text\" value={lastName} onChange={this.inputToState} placeholder=\"Last Name\" />\n                        <input name=\"email\" className={`form-input ${emailValid}`} type=\"text\" value={email} onChange={this.inputToState} placeholder=\"Email\" />\n                        <input name=\"phoneNumber\" className={`form-input ${phoneNumberValid}`} type=\"text\" value={phoneNumber} onChange={this.inputToState} placeholder=\"Phone Number\" />\n                    </label>\n                    <label className=\"form-input-group\"> <h3>Shipping Address</h3>\n                        <input name=\"street\" className={`form-input ${streetValid}`} type=\"text\" value={street} onChange={this.inputToState} placeholder=\"Street\" />\n                        <input name=\"city\" className={`form-input ${cityValid}`} type=\"text\" value={city} onChange={this.inputToState} placeholder=\"City\" />\n                        {/* <input name=\"state\" className=\"form-input\" type=\"text\" value={state} onChange={this.inputToState} placeholder=\"State\" /> */}\n                        <select className={`form-input ${stateValid}`} name=\"state\" id=\"state-input\" value={state} onChange={this.inputToState} >\n                            <option>State</option>\n                            {stateOptions}\n                        </select>\n                        <input name=\"zipCode\" className={`form-input ${zipCodeValid}`} type=\"text\" value={zipCode} onChange={this.inputToState} placeholder=\"Zip Code\" />\n                    </label>\n                    <Button bsStyle=\"primary\" id=\"submit-form\" onClick={this.submitForm}>Submit</Button>\n                    {invalidMessage}\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    customerInfo: state.customerInfo\n})\n\nexport default connect(mapStateToProps)(Checkout);","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass PaypalButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showButton: false,\n        };\n        window.React = React;\n        window.ReactDOM = ReactDOM;\n    }\n\n    componentDidMount() {\n        const {isScriptLoaded, isScriptLoadSucceed} = this.props;\n        if (isScriptLoaded && isScriptLoadSucceed) {\n            this.setState({ showButton: true });\n        }\n        console.log('PaypalButton has mounted!');\n    }\n\n    componentDidUpdate(prevProps){\n        const {isScriptLoaded, isScriptLoadSucceed} = this.props;\n        console.log(this.props);\n        console.log('this.state.showButton' + this.state.showButton);\n        console.log('this.props.isScriptLoaded' + this.props.isScriptLoaded);\n        console.log('isScriptLoaded' + isScriptLoaded);\n      \n        //const isLoadedButWasntLoadedBefore = !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n        if(prevProps.isScriptLoaded === false){\n            if (isScriptLoadSucceed) {\n                this.setState({ showButton: true });\n                console.log('Script Load Successful');\n            } else if (!isScriptLoadSucceed){\n                console.log('Script Load UnSuccessful');\n            } else {\n                console.log('isScriptLoadSucceed isnt doing anythin');\n            }\n        }\n            \n        \n        \n        console.log('componentDidUpdate has run on PaypalButton!');\n    }\n\n    render() {\n        const paypal = window.PAYPAL;\n        const {\n            total,\n            currency,\n            env,\n            commit,\n            client,\n            onSuccess,\n            onError,\n            onCancel,\n            shipping\n        } = this.props;\n    \n        const {showButton} = this.state;\n    \n        const payment = () => paypal.rest.payment.create(env, client, {\n            transactions: [\n                {\n                    amount: {\n                        total,\n                        currency,\n                    }\n                }\n            ]\n        },{\n            input_fields: {\n                no_shipping: shipping\n            }\n        });\n\n        const onAuthorize = (data, actions) => actions.payment.execute()\n        .then(() => {\n            const payment = {\n                paid: true,\n                cancelled: false,\n                payerID: data.payerID,\n                paymentID: data.paymentID,\n                paymentToken: data.paymentToken,\n                returnUrl: data.returnUrl,\n            };\n\n            onSuccess(payment);\n        });\n\n        const payPalStyle = {\n            color: 'white',\n            size: 'medium',\n            shape: 'rect',\n            label: 'checkout',\n            tagline: 'true'\n        }\n\n        if(showButton){\n            return (\n                <div>\n                    <paypal.Button.react\n                        env={env}\n                        client={client}\n                        commit={commit}\n                        payment={payment}\n                        onAuthorize={onAuthorize}\n                        onCancel={onCancel}\n                        onError={onError}\n                        style={payPalStyle}\n                        shipping={shipping}\n                    />\n                </div>\n            );\n        }\n        return(\n            <h3>Button Isnt Showing</h3>\n        )\n    }\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","import React, { Component } from 'react';\nimport { Grid,Row,Col,Button,Badge,Label,Jumbotron } from 'react-bootstrap';\nimport {Link,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport PaypalButton from '../../paypal/PaypalButton';\nimport './Payment.css'\n\n\nconst CartItem = (props) => {\n    function increment(){\n        const cartItemIncrementer = (quantity, itemKey)=> ({\n            type: \"INCREMENT\",\n            quantity: quantity + 1,\n            itemKey: itemKey\n        })\n\n        const cartAction = cartItemIncrementer(props.cartItem.quantity, props.cartItem.item.key);\n        props.dispatch(cartAction);\n    };\n\n    function decrement(){\n        if(props.cartItem.quantity >= 1){\n            const cartItemDecrementer = (quantity, itemKey)=> ({\n                type: \"DECREMENT\",\n                quantity: quantity - 1,\n                itemKey: itemKey\n            })\n            \n            const cartAction = cartItemDecrementer(props.cartItem.quantity, props.cartItem.item.key);\n            props.dispatch(cartAction);\n        }\n        \n    };\n\n    function removeFromCart(){\n        const cartItemRemove = itemKey => ({\n            type: \"REMOVEFROMCART\",\n            itemKey: itemKey\n        })\n\n        const cartAction = cartItemRemove(props.cartItem.item.key);\n        props.dispatch(cartAction);\n    };\n    \n    \n    const {cartItem} = props;\n    const {item} = cartItem;\n    \n    return(\n        <Row className=\"cart-col-item\">\n            <Col xs={3} sm={5}>\n                <img className=\"cart-item-img\" src={item.images[0]} alt={item.collection} />\n            </Col>\n            <Col xs={9} sm={7}>\n                <h4>{item.manufacturer} {item.collection} {item.sizeCategory}</h4>\n                <h4><sup>$</sup>{item.price}<sup>95</sup> each</h4>\n                <div>\n                    <Label bsStyle=\"success\" className=\"cart-quantity-button add\" onClick={increment}>+</Label>  \n                    <Badge>{cartItem.quantity}</Badge>  \n                    <Label bsStyle=\"danger\" className=\"cart-quantity-button remove\" onClick={decrement}>-</Label>\n                    <Button bsStyle=\"danger\" className=\"remove-all-button\" onClick={removeFromCart}>Remove</Button>\n                </div>\n                {cartItem.maxQuantity ? <p className=\"max-quantity-indicator\">* Max Available Quantity</p> : null}\n            </Col>\n        </Row>\n    )\n}\n\n\nclass Payment extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            paymentSuccessful: false\n        }\n    }\n\n    render(){\n        const cartItems = this.props.cart.map(cartItem => <CartItem cartItem={cartItem} dispatch={this.props.dispatch}/>);\n        const {customerInfo} = this.props;\n        const cartCount = this.props.cart.reduce((accumulator, currentValue) => accumulator + currentValue.quantity, 0)\n        const reducer = (accumulator, current) => accumulator + (current.item.price * current.quantity);\n        const cartDollarTotal = this.props.cart.reduce(reducer, 0);\n        const cartTotal = cartDollarTotal + (cartCount*95/100);\n        const client = {\n            sandbox: \"AVs_AY19sM-9EkTmunOiYdmxmqGYMxuOi7dB9nRusGx4MpIZ9mn3vHtxs76R7uShG2juynPzEbVCq3Pc\",\n            production: \"\"\n        }\n        const onSuccess = (payment) => {\n            const paymentData = {\n                payPalRes: payment,\n                purchaseCart: this.props.cart,\n                customerInfo: this.props.customerInfo\n            };\n            this.setState({\n                paymentSuccessful: true\n            });\n            this.props.dispatch({type:'PAYPALSUCCESS', data: paymentData});\n        }\n\n        if(this.state.paymentSuccessful){\n            return(\n                <Redirect push to=\"/confirmation\" />\n            )\n        }\n\n        if(cartItems.length > 0 && !this.state.paymentSuccessful){\n            return(\n                <React.Fragment>\n                    <Helmet>\n                        <title>Confirm & Pay</title>\n                    </Helmet>\n                    <Grid>\n                        <Row id=\"payment\">\n                            <Col sm={4} id=\"cart-col\">\n                                <h1 id='cart-col-head'>Your Items</h1>\n                                {cartItems}\n                            </Col>\n                            <Col id=\"info-col\" sm={4}>\n                                <h1>Your Info</h1>\n                                <p id=\"info\">{customerInfo.firstName} {customerInfo.lastName} <br/> {customerInfo.street} <br/> {customerInfo.city}, {customerInfo.state} <br/> {customerInfo.zipCode} <br/> {customerInfo.email} <br/> {customerInfo.phoneNumber}</p>\n                                <Link to=\"/customerInfoForm\">\n                                    <Button id=\"edit-info-button\" bsStyle=\"primary\">Edit Info</Button>\n                                </Link>\n                            </Col>\n                            <Col id=\"pay-col\" sm={4}>\n                                <h1>Your Total</h1>\n                                <h2 id=\"price\"><sup>$</sup>{cartTotal.toFixed(2)}</h2>\n                                <h3 id=\"shipping-cost\">with<br/>Free Shipping!</h3>\n                                <PaypalButton\n                                    client={client}\n                                    env={'sandbox'}\n                                    commit={true}\n                                    currency={'USD'}\n                                    total={cartTotal}\n                                    onSuccess={onSuccess}\n                                    shipping={1}\n                                />\n                            </Col>\n                        </Row>\n                    </Grid>\n                </React.Fragment>\n            )\n        }\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>Fill Up That Cart!</title>\n                </Helmet>\n                <Jumbotron id=\"empty-cart-jumbotron\">\n                    <h1>Your cart seems to be empty.</h1>\n                    <h3>You should go fill it up!</h3>\n                    <Link to=\"/\" >\n                        <Button bsStyle=\"primary\" bsSize=\"large\">Return to Products!</Button>\n                    </Link>\n                </Jumbotron>\n            </React.Fragment>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    cart: state.cart,\n    customerInfo: state.customerInfo\n})\n\nexport default connect(mapStateToProps)(Payment);","import React, { Component } from 'react';\nimport {Jumbotron, Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport Spinner from '../../stylingComponents/Spinner';\nimport {connect} from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport './PaymentConfirmation.css';\n\nclass PaymentConfirmation extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: true,\n            confirmationNumber: ''\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        const {orderData} = this.props;\n        if(orderData !== prevProps.orderData){\n            const orderItems = orderData.purchaseCart.map(item => ({quantity: item.quantity, UPC: item.item.key}));\n            const paypalInfo = orderData.payPalRes;\n            const customerInfo = orderData.customerInfo;\n            console.log('orderItems', orderItems);\n            console.log('paypalInfo', paypalInfo);\n            console.log('customerInfo', customerInfo);\n            const orderObj = {\n                orderItems,\n                paypalInfo,\n                customerInfo\n            };\n\n            fetch('http://18.188.129.119:8000/confirm-payment',{\n                method: 'post', \n                headers:{\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(orderObj)\n            })\n            .then(res => {\n                return res.json()\n            })\n            .then(resObj => {\n                this.setState({loading: false, confirmationNumber: resObj.confirmationNumber});\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    render(){\n\n        if(this.state.loading){\n            return(\n                <React.Fragment>\n                    <Helmet>\n                        <title>Waiting...</title>\n                    </Helmet>\n                    <div id=\"awaiting-confirmation\">\n                        <Spinner loadingMessage='Awaiting Confirmation...' />\n                    </div>\n                </React.Fragment>\n            )\n        }\n        return(\n            <React.Fragment>\n                <Helmet>\n                    <title>Order Confirmed</title>\n                </Helmet>\n                <Jumbotron id=\"order-confirmation-jumbotron\">\n                    <h1>Thanks {this.props.orderData.customerInfo.firstName}, we really appreciate your business!</h1>\n                    <h3>Your confirmation # is {this.state.confirmationNumber}</h3>\n                    <Link to=\"/\" >\n                        <Button bsStyle=\"primary\" bsSize=\"large\" id=\"go-home-button\">Return to Homepage</Button>\n                    </Link>\n                </Jumbotron>\n            </React.Fragment>\n             \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    orderData: state.orderData\n});\n\nexport default connect(mapStateToProps)(PaymentConfirmation);","const cartReturner = (cart, action) => {\n  //Find key of item in array that has same key\n  const matchingKey = cart.findIndex( item => item.item.key === action.item.key);\n  //Copy cart array for modification\n  let newCartArray = cart.slice();\n  //Ensure new array isnt empty\n  const arrayChecker = (array, index) => {\n    if(index >= 0){\n      if(array[index].maxQuantity !== true){\n        if(array[index].quantity + action.quantity >= array[index].item.availableQuantity){\n          array[index].quantity = array[index].item.availableQuantity;\n          array[index].maxQuantity = true;\n        } else {\n          array[index].quantity = array[index].quantity + action.quantity;\n        }\n      }\n      return array;\n    } else {\n      return [...array, action]\n    }\n  }\n  //Assign returned value to cart\n  const newCart = arrayChecker(newCartArray, matchingKey);\n  return newCart;\n}\n\nexport default cartReturner;","const cartChangeItemQuantity = (cart, action) => {\n    //Find key of item in array that has same key\n    const matchingKey = cart.findIndex( item => item.item.key === action.itemKey);\n    //Copy cart array for modification\n    let newCartArray = cart.slice();\n    \n    if(matchingKey >= 0){\n        if(newCartArray[matchingKey].maxQuantity === false && newCartArray[matchingKey].item.availableQuantity > action.quantity){\n            newCartArray[matchingKey].quantity = action.quantity;\n        } else if(newCartArray[matchingKey].item.availableQuantity == action.quantity){\n            newCartArray[matchingKey].quantity = action.quantity;\n            newCartArray[matchingKey].maxQuantity = true;\n        } else if(newCartArray[matchingKey].maxQuantity === true && newCartArray[matchingKey].item.availableQuantity > action.quantity){\n            newCartArray[matchingKey].quantity = action.quantity;\n            newCartArray[matchingKey].maxQuantity = false;\n        }\n    }\n  \n  \n    return newCartArray;\n}\n  \nexport default cartChangeItemQuantity;","const removeFromCart = (cart, action) => {\n    //Find key of item in array that has same key\n    const matchingKey = cart.findIndex( item => item.item.key === action.itemKey);\n    //Copy cart array for modification\n    let newCartArray = cart.slice();\n    \n    newCartArray.splice(matchingKey, 1);\n  \n  \n    return newCartArray;\n}\n  \nexport default removeFromCart;","const removeFilterParam = (data, filters, sortByPrice) => {\n    const paramsCreator = actions => {\n        let types = {};\n        actions.forEach(action => {\n            if(!types.hasOwnProperty(action.filterType)){\n            types[action.filterType] = [];\n            types[action.filterType].push(action.param);\n            } else if(types.hasOwnProperty(action.filterType)){\n            types[action.filterType].push(action.param);\n            }\n        })\n        return types;\n    }\n    const compare = (obj, array) => {\n        let trueFalse = [];\n        for(let i = 1; i<array.length; i++){\n            const key = array[0];\n            if(obj[key] === array[i]){\n            trueFalse.push(0);\n            } else {\n            trueFalse.push(1)\n            }\n        }\n        if(trueFalse.includes(0)){\n            return 0;\n        } else {\n            return -1;\n        }\n    }\n    const insertIfInFor = (obj, array) => {\n        let trueFalseList = [];\n        for(let i = 0; i<array.length; i++){\n            trueFalseList.push(compare(obj, array[i]));\n        }\n        return trueFalseList;\n    };\n    const reducer = (accumulator, value) => accumulator + value;\n    const filtersArrayUnformatted = Object.entries(paramsCreator(filters));\n    const filtersArray = filtersArrayUnformatted.map(array => {\n        const type = array[0];\n        const values = array[1];\n        values.unshift(type);\n        return values;\n    });\n    const filteredData = data.filter(item => {\n        if(filtersArray.length > 0){\n            if(insertIfInFor(item, filtersArray).reduce(reducer) === 0){\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return true;\n        }\n        \n    })\n    if(sortByPrice.lowToHigh || sortByPrice.highToLow){\n        if(sortByPrice.lowToHigh){\n            filteredData.sort((a,b) => a.price - b.price);\n        } else if(sortByPrice.highToLow){\n            filteredData.sort((a,b) => b.price - a.price);\n        }\n    }\n    return filteredData;\n}\n  \nexport default removeFilterParam;\n\n\n\n\n","const modifyAppliedFilters = (appliedFilters, action) => {\n    if(action.isSelected){\n        appliedFilters.push(action);\n    } else {\n        const indexOfFilter = appliedFilters.findIndex(filter => filter.param === action.param);\n        appliedFilters.splice(indexOfFilter, 1);\n    }\n\n    return appliedFilters;\n}\n  \nexport default modifyAppliedFilters;","const sortByPrice = (filteredData, action) => {\n    if(action.order === \"lowToHigh\"){\n        return filteredData.sort((a,b) => a.price - b.price);\n    } else if(action.order === \"highToLow\"){\n        return filteredData.sort((a,b) => b.price - a.price);\n    }\n}\n\nexport default sortByPrice;","const modifyPriceSort = (sortObj, action) => {\n    if(action.selected){\n        Object.keys(sortObj).forEach(key => sortObj[key] = false);\n        sortObj[action.order] = true;\n    } else if(!action.selected){\n        Object.keys(sortObj).forEach(key => sortObj[key] = false);\n        sortObj[action.order] = false;\n    }\n\n    return sortObj;\n}\n\nexport default modifyPriceSort;","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Route } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport Home from './components/routes/home/Home';\nimport Cart from './components/routes/cart/Cart';\nimport ProductPage from './components/routes/product/Product';\nimport CustomerInfoForm from './components/routes/customerInfo/CustomerInfoForm';\nimport Payment from './components/routes/payment/Payment';\nimport PaymentConfirmation from './components/routes/paymentConfirmation/PaymentConfirmation';\nimport cartReturner from './redux-functions/cart/cartReturner';\nimport cartChangeItemQuantity from './redux-functions/cart/cartChangeItemQuantity';\nimport removeFromCart from './redux-functions/cart/removeFromCart';\nimport removeFilterParam from './redux-functions/product-filter/removeFilterParam';\nimport modifyAppliedFilters from './redux-functions/product-filter/modifyAppliedFilters';\nimport sortByPrice from './redux-functions/product-sort/sortByPrice';\nimport modifyPriceSort from './redux-functions/product-sort/modifySortByPriceObj';\n\nfunction saveCartToLocalStorage(state){\n  try{\n    const serializedCart = JSON.stringify(state.cart);\n    localStorage.setItem('cart', serializedCart)\n  } catch(e) {\n    console.log(e);\n  }\n}\n\nfunction loadCartFromLocalStorage(){\n  try{\n    const serializedCart = localStorage.getItem('cart');\n    return serializedCart === null ?  [] : JSON.parse(serializedCart);\n  } catch(e){\n    console.log(e);\n    return [];\n  }\n}\n\nconst persistedCart = loadCartFromLocalStorage();\n\nfunction saveCustomerInfoToLocalStorage(state){\n  try{\n    const serializedCustomerInfo = JSON.stringify(state.customerInfo);\n    localStorage.setItem('customerInfo', serializedCustomerInfo)\n  } catch(e) {\n    console.log(e);\n  }\n}\n\nfunction loadCustomerInfoFromLocalStorage(){\n  try{\n    const serializedCustomerInfo = localStorage.getItem('customerInfo');\n    return serializedCustomerInfo === null ?  {\n      firstName: '', lastName: '', email: '', phoneNumber: '', street: '', city: '', state: '', zipCode: ''\n    } : JSON.parse(serializedCustomerInfo);\n  } catch(e){\n    console.log(e);\n    return { firstName: '', lastName: '', email: '', phoneNumber: '', street: '', city: '', state: '', zipCode: '' };\n  }\n}\n\nconst customerInfo = loadCustomerInfoFromLocalStorage();\n\nfunction saveProductsToLocalStorage(state){\n  try{\n    const products = JSON.stringify(state.data);\n    localStorage.setItem('products', products)\n  } catch(e) {\n    console.log(e);\n  }\n}\n\nfunction loadProductsFromLocalStorage(){\n  try{\n    const products = localStorage.getItem('products');\n    return products === null ?  [] : JSON.parse(products);\n  } catch(e){\n    console.log(e);\n    return [];\n  }\n}\n\nconst products = loadProductsFromLocalStorage();\n\nfunction persistOrderDataToLocalStorage(state){\n  try{\n    const orderData = JSON.stringify(state.orderData);\n    localStorage.setItem('orderData', orderData)\n  } catch(e) {\n    console.log(e);\n  }\n}\n\nfunction loadOrderDataFromLocalStorage(){\n  try{\n    const orderData = localStorage.getItem('orderData');\n    return orderData === null ?  {purchaseCart:[]} : JSON.parse(orderData);\n  } catch(e){\n    console.log(e);\n    return {purchaseCart:[]};\n  }\n}\n\nconst orderData = loadOrderDataFromLocalStorage();\n\nconst initialState = {\n  cart: persistedCart,\n  productsPerLoad: 25,\n  data: products,\n  appliedFilters: [],\n  filteredData: [],\n  visibleProducts: 25,\n  sortByPrice: {\n    lowToHigh: false,\n    highToLow: false\n  },\n  customerInfo: customerInfo,\n  orderData: orderData\n};\n\nfunction reducer(state = initialState, action){\n  switch(action.type){\n    case \"LOADDATA\": return {...state, data: action.data, filteredData: action.data};\n    case \"UPDATECUSTOMERINFO\": return {...state, customerInfo: action.customerInfo};\n    case \"VIEWMORE\": return {...state, visibleProducts: state.visibleProducts + 25 };\n    case \"EDITFILTERPARAMS\": return {...state, visibleProducts: 25, appliedFilters: modifyAppliedFilters(state.appliedFilters, action), filteredData: removeFilterParam(state.data, state.appliedFilters, state.sortByPrice) };\n    case \"SORTBYPRICE\": return {...state, visibleProducts: 25, filteredData: sortByPrice(state.filteredData, action), sortByPrice: modifyPriceSort(state.sortByPrice, action) };\n    case \"CLEARFILTERS\": return {...state, visibleProducts: 25, appliedFilters: [], filteredData: state.data};\n    case \"INCREMENT\": return { ...state, cart: cartChangeItemQuantity(state.cart, action) };\n    case \"DECREMENT\": return { ...state, cart: cartChangeItemQuantity(state.cart, action) };\n    case \"REMOVEFROMCART\": return {...state, cart: removeFromCart(state.cart, action) };\n    case \"ADD_TO_CART\": return { ...state, cart: cartReturner(state.cart, action)};\n    case \"PAYPALSUCCESS\": return {...state, orderData: action.data};\n    default: return state;\n  }\n}\n\nconst store = createStore(reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()  \n);\n\nstore.subscribe(() => saveCartToLocalStorage(store.getState()));\nstore.subscribe(() => saveCustomerInfoToLocalStorage(store.getState()));\nstore.subscribe(() => saveProductsToLocalStorage(store.getState()));\nstore.subscribe(() => persistOrderDataToLocalStorage(store.getState()));\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <NavBar />\n            <Route exact path=\"/\" render={(props) => <Home {...props} loadMoreQuantity={3} />} />\n            <Route path=\"/cart\" component={Cart} />\n            <Route path=\"/product/:key/\" component={ProductPage} />\n            <Route path=\"/customerInfoForm\" component={CustomerInfoForm} />\n            <Route path=\"/payment\" component={Payment} />\n            <Route path=\"/confirmation\" component={PaymentConfirmation} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}